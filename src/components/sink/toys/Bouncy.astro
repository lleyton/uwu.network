<div id="bouncy-container" class="border border-t-0 border-white relative place-self-stretch">
  <div id="bouncy" class="border border-white rounded-1 absolute w-15px h-15px" />
</div>

<script>
  import { v2add, v2smul, v2sub } from "^js/math"

  const container = document.getElementById("bouncy-container");
  const bouncy = document.getElementById("bouncy");

  const padding = (bouncy.clientHeight / 2) + 1;

  const yStopThres = .1; // max y velocity to stop at
  const yBotThres = 3; // max y level to snap down at

  const xDamping = .005; // a little goes a long way
  const bounceDamping = .3;
  // units: pixels per 5ms
  const gravity = .06;
  let velocity = [5, 0];

  let position = [padding, padding];

  let mousePos;
  container.onmousedown = (ev) => mousePos = [ev.clientX, ev.clientY];
  container.onmousemove = (ev) => mousePos && (mousePos = [ev.clientX, ev.clientY]);
  window.addEventListener("mouseup", () => mousePos = null);

  let i = 0; // balls
  setInterval(() => {
    i++;
    if (i > 5) i = 0;

    if (mousePos && i === 0) {
      const containerPos = [container.offsetLeft, container.offsetTop];
      const relativePos = [bouncy.offsetLeft, bouncy.offsetTop];
      const realPos = v2add([padding, padding], v2add(relativePos, containerPos))
      velocity = v2smul(v2sub(mousePos, realPos), .1);
    }

    const size = [container.clientWidth, container.clientHeight];

    const precheckPos = v2add(position, velocity);

    velocity[0] *= (1 - xDamping);
    velocity[1] += gravity;

    // bottom bounce
    if (precheckPos[1] + (padding * 2) >= size[1])
      velocity[1] *= -(1 - bounceDamping);

    // right bounce
    if (precheckPos[0] + (padding * 2) >= size[0])
      velocity[0] *= -(1 - bounceDamping);

    // left bounce
    if (precheckPos[0] <= 0)
      velocity[0] *= -(1 - bounceDamping);

    if (!mousePos && Math.abs(velocity[1]) <= yStopThres && size[1] - (precheckPos[1] + (padding * 2)) <= yBotThres) {
      velocity[1] = 0;
      position[1] = size[1] - (padding * 2);
    }

    position = v2add(position, velocity);

    bouncy.style.left = position[0] + "px";
    bouncy.style.top = position[1] + "px";
  }, 5);
  // 5ms is way overkill for the 16ms 60fps needs
  // however 144hz needs 6.9ms (nice) so yep.
  // still, 240hz needs 4ms CRY LMAO
</script>